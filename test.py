import folium
import numpy as np 



# Center the map on a location
m = folium.Map(location=[40.7128, -74.0060], zoom_start=2)  # Centered on New York for this example

# First set of coordinates (red markers)
latitudes = [-34.914367, -34.914367, -34.914326, -34.915857, -34.91407, -34.914012, -34.914053, -34.914103, -34.913988, -34.913959, -34.914028, -34.914073, -34.914113, -34.914051, -34.914033, -34.914076, -34.91405, -34.914039, -34.913996, -34.914053, -34.914081, -34.914041, -34.914027, -34.914049, -34.914096, -34.914056, -34.914088, -34.914064, -34.914082, -34.914115, -34.913992, -34.914113, -34.914039, -34.914063, -34.914068, -34.914086, -34.91414, -34.914077, -34.914045, -34.914133, -34.914003, -34.914056, -34.913966, -34.914032, -34.914044, -34.91404, -34.914094, -34.914046, -34.919294, -34.91938, -34.91937, -34.919289, -34.919236, -34.919239, -34.919262, -34.919324, -34.919415, -34.919526, -34.91956 ]
longitudes = [-56.165625, -56.165625, -56.165536, -56.167942, -56.165166, -56.165174, -56.165274, -56.165172, -56.165144, -56.165185, -56.165172, -56.165269, -56.165227, -56.165134, -56.165148, -56.165195, -56.165232, -56.165203, -56.165205, -56.165256, -56.165112, -56.165118, -56.165122, -56.165142, -56.16514, -56.165166, -56.165177, -56.165162, -56.16515, -56.165127, -56.165113, -56.165245, -56.165168, -56.165182, -56.1652, -56.165224, -56.165122, -56.165201, -56.165157, -56.165158, -56.165189, -56.165164, -56.165125, -56.165129, -56.165081, -56.165195, -56.165215, -56.16517, -56.166027, -56.16643, -56.166424, -56.166437, -56.166113, -56.166106, -56.166342, -56.166496, -56.166409, -56.166486, -56.166578]
for lat, lon in zip(latitudes, longitudes):
    folium.Marker(location=[lat, lon], icon=folium.Icon(color='red')).add_to(m)

# Second set of coordinates (green markers)
latitudes_mod = [np.float64(-34.91436699999999), np.float64(-34.91436699999999), np.float64(-34.91432600000001), np.float64(-34.915856999999995), np.float64(-34.91407), np.float64(-34.914012), np.float64(-34.91405300000002), np.float64(-34.914103), np.float64(-34.913988), np.float64(-34.91395900000001), np.float64(-34.914028), np.float64(-34.914072999999995), np.float64(-34.91411300000001), np.float64(-34.914051), np.float64(-34.914032999999996), np.float64(-34.914076000000016), np.float64(-34.91405000000001), np.float64(-34.914038999999995), np.float64(-34.913996000000004), np.float64(-34.91405300000001), np.float64(-34.91408100000002), np.float64(-34.914041000000005), np.float64(-34.91402699999999), np.float64(-34.914049), np.float64(-34.914096), np.float64(-34.914055999999995), np.float64(-34.914088000000014), np.float64(-34.914063999999996), np.float64(-34.91408199999999), np.float64(-34.91411500000002), np.float64(-34.91399200000001), np.float64(-34.914113), np.float64(-34.91403900000001), np.float64(-34.914063), np.float64(-34.914068), np.float64(-34.91408599999998), np.float64(-34.91414), np.float64(-34.91407700000001), np.float64(-34.914045), np.float64(-34.914133), np.float64(-34.914003), np.float64(-34.914056), np.float64(-34.913966), np.float64(-34.914032), np.float64(-34.914044), np.float64(-34.91404), np.float64(-34.914094000000006), np.float64(-34.914045999999985), np.float64(-34.919294), np.float64(-34.91938), np.float64(-34.91937), np.float64(-34.919289000000006), np.float64(-34.91923599999999), np.float64(-34.919239000000005), np.float64(-34.919261999999996), np.float64(-34.91932400000001), np.float64(-34.91941500000001), np.float64(-34.919526000000005), np.float64(-34.91956)]
longitudes_mod = [np.float64(-56.165625), np.float64(-56.165625), np.float64(-56.165536), np.float64(-56.167942), np.float64(-56.165166), np.float64(-56.16517400000001), np.float64(-56.165274), np.float64(-56.16517199999999), np.float64(-56.165144000000005), np.float64(-56.16518500000001), np.float64(-56.16517199999999), np.float64(-56.165269), np.float64(-56.16522700000001), np.float64(-56.165134), np.float64(-56.165148), np.float64(-56.165195), np.float64(-56.165232), np.float64(-56.165203), np.float64(-56.165205), np.float64(-56.165256), np.float64(-56.165112), np.float64(-56.165118), np.float64(-56.165122), np.float64(-56.16514200000001), np.float64(-56.16514), np.float64(-56.165166000000006), np.float64(-56.165177), np.float64(-56.165162), np.float64(-56.16515), np.float64(-56.165127), np.float64(-56.165113), np.float64(-56.165245), np.float64(-56.165167999999994), np.float64(-56.165182), np.float64(-56.1652), np.float64(-56.165224), np.float64(-56.165122000000004), np.float64(-56.165200999999996), np.float64(-56.165157), np.float64(-56.165158), np.float64(-56.165189000000005), np.float64(-56.165164), np.float64(-56.165125), np.float64(-56.165129), np.float64(-56.165081), np.float64(-56.165195), np.float64(-56.16521500000001), np.float64(-56.16517), np.float64(-56.166027), np.float64(-56.16643), np.float64(-56.166424), np.float64(-56.166437), np.float64(-56.166113), np.float64(-56.166106), np.float64(-56.166342), np.float64(-56.166496), np.float64(-56.166409), np.float64(-56.166486000000006), np.float64(-56.166578)]
for lat, lon in zip(latitudes, longitudes):
    folium.Marker(location=[lat, lon], icon=folium.Icon(color='red')).add_to(m)

for lat, lon in zip(latitudes_mod, longitudes_mod):
    folium.Marker(location=[lat, lon], icon=folium.Icon(color='green')).add_to(m)

# Display the map
m.save("map.html")

